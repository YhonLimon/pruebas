.Hotspot {
    background: #fff;
    border-radius: 32px;
    border: 0;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.25);
    box-sizing: border-box;
    cursor: pointer;
    height: 24px;
    padding: 8px;
    position: relative;
    transition: opacity 0.3s;
    width: 24px;
}

.Hotspot:not([data-visible]) {
    background: transparent;
    border: 4px solid #fff;
    box-shadow: none;
    height: 32px;
    pointer-events: none;
    width: 32px;
}

.Hotspot:focus {
    border: 4px solid rgb(0, 128, 200);
    height: 32px;
    outline: none;
    width: 32px;
}

.Hotspot>* {
    opacity: 1;
    /*transform: translateY(-50%);*/
}

.HotspotDot {
    background: #fff;
    border-radius: 32px;
    border: 0;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.25);
    box-sizing: border-box;
    cursor: pointer;
    height: 1px;
    padding: 1px;
    position: relative;
    transition: opacity 0.3s;
    width: 1px;
}

.HotspotDot:not([data-visible]) {
    background: transparent;
    border: 1px solid #fff;
    box-shadow: none;
    height: 4px;
    pointer-events: none;
    width: 4px;
}

.HotspotDot:focus {
    border: 1px solid rgb(0, 128, 200);
    height: 2px;
    outline: none;
    width: 2px;
}

.HotspotDot>* {
    opacity: 1;
    /*transform: translateY(-50%);*/
}

.HotspotAnnotation {
    background: #fff;
    border-radius: 4px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.25);
    color: rgba(0, 0, 0, 0.8);
    display: block;
    font-family: Futura, Helvetica Neue, sans-serif;
    font-size: 18px;
    font-weight: 700;
    left: calc(100% + 1em);
    max-width: 128px;
    padding: 0.5em 1em;
    position: absolute;
    top: 50%;
    width: max-content;
}

.Hotspot:not([data-visible])>* {
    opacity: 0;
    pointer-events: none;
    /*transform: translateY(calc(-50% + 4px));*/
    transition: transform 0.3s, opacity 0.3s;
}

#loadContainer {
  width: 200px;
  height: 200px;
  position: relative;
  left:50%;
  top:50%;
  transform:translate(-50%, -50%);
}


@keyframes circle {
    from { transform: translateX(-50%) rotate(0deg) translateX(50px) rotate(0deg); }
    to   { transform: translateX(-50%) rotate(360deg) translateX(50px) rotate(-360deg); }
}

@keyframes elongate {
    from { transform: translateX(100px); }
    to   { transform: translateX(-100px); }
}

model-viewer > #ar-prompt {
    position: absolute;
    left: 50%;
    bottom: 175px;
    animation: elongate 2s infinite ease-in-out alternate;
    display: none;
}

model-viewer[ar-status="session-started"] > #ar-prompt {
    display: block;
}

model-viewer > #ar-prompt > img {
    animation: circle 4s linear infinite;
}